==============
 BRICKER v3.x
==============
X - Outline Two-Player game loops.
X - Outline Opponent class.
X - Outline Packet class.
X - Create Surface class to simplify rendering.
X - Refactor Renderer class to use Surface.
X - Render function to display a message.
X - Render function to clear a message.
X - Message box loop and logic.
X - Write packet serialization / deserialization.
X - Refactor matrix and brick grid structures.
X - Create DiscoveryClient class.
X - Create DiscoveryServer class.
X - Design Two-Player Lobby rendering.
X - Write TCP communications library.
X - Create generic menu logic, replace original menu.
X - Write up basic two-player initialization.
X - Send status changes to opponent.
X - Add packets sent/received to debug output.
X - Improve messages.
X - Fix reject-invite bug.
X - Add player disconnect.
X - Add player game-over, then restart.
X - Add lines sent (no animation).
X - Redesign layout.
X - Add hold feature, six next pieces.
X - Add background animation.
X - When popup open, dim primary borders.
X - Improve message box rendering.
X - Add Settings menu.
X - Add music.
X   * Add menu music.
X   * Add game music.
X   * Remember game music position.
X - Add sound effects:
X   * Menu sounds
X   * Rotate sound.
X   * Drop sound.
X   * Line clear sound.
X   * Add lines sound.
X - Add sound effects to settings.
X - Add music to settings.
X - Network Fixes:
X   * Send Game Quit to Server, even on Window close
X   * Accept timeout not working right
- Add saving of settings.
- Allow reset of high scores from settings.
- Improve config reader.
- Allow initials change.
- Move menu loops into library class?



Clear1          Clear lines
Clear2          
Click1          Brick move, menu select
Click2          
Click3          
Error1          
Explode1        
Explode2        
Explode3        Explode spaces 
Hit1            
Hit2            Brick hit bottom
LevelUp1        Level up
MenuBack1       
MenuMove1       
MenuMove2       
MenuSelect1     
MenuSelect2     
Music1          
Music2          
Send1           


=============
 GAME SERVER
=============
X - Create main class, initialize logger.
X - Create server class.
X - Start server, maintain list of clients.
X - Receive packets.
X - Create config file and classes.
X - Add request/response system.
X - Add get-players command.
X - Add generic request/response forwarding.
X - Add generic data passthrough.
X - Fix weird down button bug.
X - Design game over behavior and communications.
X - Design player disconnect behavior (session tracking).
X   * Add server-side session tracking.
X   * Add session timeout based on player heartbeats.
X   * Create EndSession command.
X   * Send EndSession command from server.
X   * Receive EndSession command in game.  Show message, clear opponent.


===========
 QUESTIONS
===========
- Can invite logic be moved out of GameComms?
- Rename GameCommunications?


=======
 LATER
=======
- Refactoring (player, opponent, etc).  ErrorHandler like Log.
- Improve game animation.
